{"version":3,"file":"RTPPacket.js","sourceRoot":"","sources":["../../lib/transports/RTPPacket.ts"],"names":[],"mappings":"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","sourcesContent":["// Packetize audio chunk to RTP packets \n// By Thangcq98, August 2022\n\nimport { Buffer } from \"buffer\";\n\nfunction toUnsigned(val: number): number {\n    return ((val >>> 1) * 2 + (val & 1));\n}\n\nclass RTPPacket {\n    private _bufpkt: Buffer; // holds the RTP header (12 bytes) AND the RTP packet payload\n\n    constructor(bufpayload: Buffer, hasHeader = false) {\n        /* See RFC3550 for more details: http://www.ietf.org/rfc/rfc3550.txt\n        V = 2, // version. always 2 for this RFC (2 bits)\n        P = 0, // padding. not supported yet, so always 0 (1 bit)\n        X = 0, // header extension (1 bit)\n        CC = 0, // CSRC count (4 bits)\n        M = 0, // marker (1 bit)\n        PT = 0, // payload type. see section 6 in RFC3551 for valid types: http://www.ietf.org/rfc/rfc3551.txt (7 bits)\n        SN = Math.floor(1000 * Math.random()), // sequence number. SHOULD be random (16 bits)\n        TS = 1, // timestamp in the format of NTP (# sec. since 0h UTC 1 January 1900)? (32 bits)\n        SSRC = 1; // synchronization source (32 bits)\n        //CSRC = 0, // contributing sources. not supported yet (32 bits)\n        //DP = 0, // header extension, 'Defined By Profile'. not supported yet (16 bits)\n        //EL = 0; // header extension length. not supported yet (16 bits)\n        */\n        if (hasHeader && bufpayload.length >= 12) {\n            // full packet (generally an incoming packet straight from the socket)\n            this._bufpkt = bufpayload;\n            /*V = (bufpkt[0] >>> 6 & 0x03);\n            P = (bufpkt[0] >>> 5 & 0x01);\n            X = (bufpkt[0] >>> 4 & 0x01);\n            CC = (bufpkt[0] & 0x0F);\n            M = (bufpkt[1] >>> 7 & 0x01);\n            PT = (bufpkt[1] & 0x7F);\n            SN = (bufpkt[2] << 8 | bufpkt[3]);\n            TS = (bufpkt[4] << 24 | bufpkt[5] << 16 | bufpkt[6] << 8 | bufpkt[7]);\n            SSRC = (bufpkt[8] << 24 | bufpkt[9] << 16 | bufpkt[10] << 8 | bufpkt[11]);*/\n            // bufpkt[12..bufpkg.length-1] == payload data\n        } else {\n            // just payload data (for outgoing/sending)\n            this._bufpkt = new Buffer(12 + bufpayload.length); // V..SSRC + payload\n            /*bufpkt[0] = (V << 6 | P << 5 | X << 4 | CC);\n            bufpkt[1] = (M << 7 | PT);\n            bufpkt[2] = (SN >>> 8)\n            bufpkt[3] = (SN & 0xFF);\n            bufpkt[4] = (TS >>> 24);\n            bufpkt[5] = (TS >>> 16 & 0xFF);\n            bufpkt[6] = (TS >>> 8 & 0xFF);\n            bufpkt[7] = (TS & 0xFF);\n            bufpkt[8] = (SSRC >>> 24);\n            bufpkt[9] = (SSRC >>> 16 & 0xFF);\n            bufpkt[10] = (SSRC >>> 8 & 0xFF);\n            bufpkt[11] = (SSRC & 0xFF);*/\n            this._bufpkt[0] = 0x80;\n            this._bufpkt[1] = 0;\n            const SN = Math.floor(1000 * Math.random());\n            this._bufpkt[2] = (SN >>> 8)\n            this._bufpkt[3] = (SN & 0xFF);\n            this._bufpkt[4] = 0;\n            this._bufpkt[5] = 0;\n            this._bufpkt[6] = 0;\n            this._bufpkt[7] = 1;\n            this._bufpkt[8] = 0;\n            this._bufpkt[9] = 0;\n            this._bufpkt[10] = 0;\n            this._bufpkt[11] = 1;\n            bufpayload.copy(this._bufpkt, 12, 0); // append payload data\n        }\n    }\n\n    public get type() { return (this._bufpkt[1] & 0x7F); }\n    public set type(val) {\n        val = toUnsigned(val);\n        if (val <= 127) {\n            this._bufpkt[1] -= (this._bufpkt[1] & 0x7F);\n            this._bufpkt[1] |= val;\n        }\n    }\n\n    public get seq() { return (this._bufpkt[2] << 8 | this._bufpkt[3]); }\n    public set seq(val) {\n        val = toUnsigned(val);\n        if (val <= 65535) {\n            this._bufpkt[2] = (val >>> 8);\n            this._bufpkt[3] = (val & 0xFF);\n        }\n    }\n\n    public get time() { return (this._bufpkt[4] << 24 | this._bufpkt[5] << 16 | this._bufpkt[6] << 8 | this._bufpkt[7]); }\n    public set time(val) {\n        val = toUnsigned(val);\n        if (val <= 4294967295) {\n            this._bufpkt[4] = (val >>> 24);\n            this._bufpkt[5] = (val >>> 16 & 0xFF);\n            this._bufpkt[6] = (val >>> 8 & 0xFF);\n            this._bufpkt[7] = (val & 0xFF);\n        }\n    }\n\n    public get source() { return (this._bufpkt[8] << 24 | this._bufpkt[9] << 16 | this._bufpkt[10] << 8 | this._bufpkt[11]); }\n    public set source(val) {\n        val = toUnsigned(val);\n        if (val <= 4294967295) {\n            this._bufpkt[8] = (val >>> 24);\n            this._bufpkt[9] = (val >>> 16 & 0xFF);\n            this._bufpkt[10] = (val >>> 8 & 0xFF);\n            this._bufpkt[11] = (val & 0xFF);\n        }\n    }\n\n    // Gets/Sets the payload of an existing RTP packet (without any RTP Headers)\n    public get payload() { return (this._bufpkt.slice(12, this._bufpkt.length)); }\n    public set payload(val) {\n        if (Buffer.isBuffer(val)) {\n            const newsize = 12 + val.length;\n            if (this._bufpkt.length == newsize)\n                val.copy(this._bufpkt, 12, 0);\n            else {\n                const newbuf = new Buffer(newsize);\n                this._bufpkt.copy(newbuf, 0, 0, 12); // copy the RTP header\n                val.copy(newbuf, 12, 0);\n                this._bufpkt = newbuf;\n            }\n        }\n    }\n\n    // gets/sets the RTP Header and RTP Payload\n    public get packet() { return this._bufpkt; }\n    public set packet(val) {\n        this._bufpkt = val;\n    }\n}\n\nexport default RTPPacket;"]}