{"version":3,"file":"ONVIFMetadataTransport.js","sourceRoot":"","sources":["../../lib/transports/ONVIFMetadataTransport.ts"],"names":[],"mappings":";AAAA,wDAAwD;AACxD,uBAAuB;AACvB,mCAAmC;;AAOnC,2BAAuB;AASvB,MAAqB,sBAAsB;IAKzC,YAAY,MAAkB,EAAE,MAAgB,EAAE,OAAgB;QAChE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QAEd,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;YAC1C,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,EAAE;gBACjC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;aAC/B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,MAAiB;QAChC,iCAAiC;QAEjC,qBAAqB;QACrB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEtD,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;YACtB,4BAA4B;YAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAG,GAAC,QAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;SACf;IACH,CAAC;CACF;AA9BD,yCA8BC","sourcesContent":["// De-packetize RTP packets to re-create ONVIF Mfetadata\n// Write data to a file\n// By Roger Hardiman, December 2021\n\nimport RTSPClient from \"../RTSPClient\";\nimport { RTPPacket } from \"../util\";\n\nimport * as transform from \"sdp-transform\";\nimport { Writable } from \"stream\";\nimport {EOL} from \"os\";\n\ninterface Details {\n  codec: string;\n  mediaSource: transform.MediaDescription;\n  rtpChannel: number;\n  rtcpChannel: number;\n}\n\nexport default class ONVIFMetadataTransport {\n  client: RTSPClient;\n  stream: Writable;\n  xml: string;\n\n  constructor(client: RTSPClient, stream: Writable, details: Details) {\n    this.client = client;\n    this.stream = stream;\n    this.xml = \"\";\n\n    client.on(\"data\", (channel, data, packet) => {\n      if (channel == details.rtpChannel) {\n        this.processRTPPacket(packet);\n      }\n    });\n  }\n\n  processRTPPacket(packet: RTPPacket): void {\n    // RTP Payload for ONVIF Metadata\n\n    // Accumulate payload\n    this.xml = this.xml.concat(packet.payload.toString());\n\n    if (packet.marker == 1) {\n      // end of xml, write to file\n      this.stream.write(this.xml);\n      this.stream.write(EOL+EOL);\n      this.xml = \"\";\n    }\n  }\n}\n"]}